# Generated by Django 2.2.6 on 2019-10-29 11:40

import datetime
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('scene', '0002_auto_20191025_1717'),
    ]

    operations = [
        migrations.CreateModel(
            name='Alarmlamp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insert_time', models.DateTimeField(default=datetime.datetime(2019, 10, 29, 11, 40, 26, 253783), verbose_name='报警灯更新时间')),
                ('status', models.IntegerField(choices=[(1, '正常'), (2, '异常')], verbose_name='报警灯状态')),
                ('online', models.IntegerField(choices=[(1, '在线'), (2, '离线')], verbose_name='在线状态')),
            ],
            options={
                'verbose_name': '报警灯',
            },
        ),
        migrations.CreateModel(
            name='Alertor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insert_time', models.DateTimeField(default=datetime.datetime(2019, 10, 29, 11, 40, 26, 253783), verbose_name='报警器更新时间')),
                ('status', models.IntegerField(choices=[(1, '正常'), (2, '异常')], verbose_name='报警器状态')),
                ('online', models.IntegerField(choices=[(1, '在线'), (2, '离线')], verbose_name='在线状态')),
            ],
            options={
                'verbose_name': '报警器',
            },
        ),
        migrations.CreateModel(
            name='Beam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insert_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='光照强度更新时间')),
                ('value', models.FloatField(verbose_name='光照强度度值')),
                ('status', models.IntegerField(choices=[(1, '正常'), (2, '异常')], verbose_name='传感器状态')),
                ('online', models.IntegerField(choices=[(1, '在线'), (2, '离线')], verbose_name='在线状态')),
            ],
            options={
                'verbose_name': '光照强度传感器',
            },
        ),
        migrations.CreateModel(
            name='Co2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insert_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='二氧化碳传感器更新时间')),
                ('value', models.FloatField(verbose_name='二氧化碳浓度值')),
                ('status', models.IntegerField(choices=[(1, '正常'), (2, '异常')], verbose_name='传感器状态')),
                ('online', models.IntegerField(choices=[(1, '在线'), (2, '离线')], verbose_name='在线状态')),
            ],
            options={
                'verbose_name': '二氧化碳传感器',
            },
        ),
        migrations.CreateModel(
            name='Display',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insert_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='显示内容更新时间')),
                ('content', models.CharField(default='当前无内容', max_length=255, verbose_name='显示内容')),
                ('status', models.IntegerField(choices=[(1, '正常'), (2, '异常')], verbose_name='设备状态')),
                ('online', models.IntegerField(choices=[(1, '在线'), (2, '离线')], verbose_name='在线状态')),
            ],
            options={
                'verbose_name': 'LCD显示器',
            },
        ),
        migrations.CreateModel(
            name='Fan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insert_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='风扇更新时间')),
                ('status', models.IntegerField(choices=[(1, '正常'), (2, '异常')], verbose_name='风扇状态')),
                ('online', models.IntegerField(choices=[(1, '在线'), (2, '离线')], verbose_name='在线状态')),
            ],
            options={
                'verbose_name': '风扇传感器',
            },
        ),
        migrations.CreateModel(
            name='Flame',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insert_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='火光更新时间')),
                ('status', models.IntegerField(choices=[(1, '正常'), (2, '异常')], verbose_name='火光状态')),
                ('online', models.IntegerField(choices=[(1, '在线'), (2, '离线')], verbose_name='在线状态')),
            ],
            options={
                'verbose_name': '火光传感器',
            },
        ),
        migrations.CreateModel(
            name='Humidity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insert_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='湿度更新时间')),
                ('value', models.FloatField(verbose_name='湿度值')),
                ('status', models.IntegerField(choices=[(1, '正常'), (2, '异常')], verbose_name='传感器状态')),
                ('online', models.IntegerField(choices=[(1, '在线'), (2, '离线')], verbose_name='在线状态')),
            ],
            options={
                'verbose_name': '湿度传感器',
            },
        ),
        migrations.CreateModel(
            name='Invade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insert_time', models.DateTimeField(default=datetime.datetime(2019, 10, 29, 11, 40, 26, 255777), verbose_name='入侵检测更新时间')),
                ('status', models.IntegerField(choices=[(1, '正常'), (2, '异常')], verbose_name='入侵状态')),
                ('online', models.IntegerField(choices=[(1, '在线'), (2, '离线')], verbose_name='在线状态')),
            ],
            options={
                'verbose_name': '入侵检测',
            },
        ),
        migrations.CreateModel(
            name='Light',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insert_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='灯光数据更新时间')),
                ('status', models.IntegerField(choices=[(1, '正常'), (2, '异常')], verbose_name='灯光状态')),
                ('online', models.IntegerField(choices=[(1, '在线'), (2, '离线')], verbose_name='在线状态')),
            ],
            options={
                'verbose_name': '灯光传感器',
            },
        ),
        migrations.CreateModel(
            name='Methane',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insert_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='甲烷更新时间')),
                ('status', models.IntegerField(choices=[(1, '正常'), (2, '异常')], verbose_name='甲烷状态')),
                ('online', models.IntegerField(choices=[(1, '在线'), (2, '离线')], verbose_name='在线状态')),
            ],
            options={
                'verbose_name': '甲烷传感器',
            },
        ),
        migrations.CreateModel(
            name='Pm25',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insert_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='pm25更新时间')),
                ('value', models.FloatField(verbose_name='pm25值')),
                ('status', models.IntegerField(choices=[(1, '正常'), (2, '异常')], verbose_name='pm25状态')),
                ('online', models.IntegerField(choices=[(1, '在线'), (2, '离线')], verbose_name='在线状态')),
            ],
            options={
                'verbose_name': 'PM2.5传感器',
            },
        ),
        migrations.CreateModel(
            name='Pump',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insert_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='水泵更新时间')),
                ('status', models.IntegerField(choices=[(1, '正常'), (2, '异常')], verbose_name='水泵状态')),
                ('online', models.IntegerField(choices=[(1, '在线'), (2, '离线')], verbose_name='在线状态')),
            ],
            options={
                'verbose_name': '水泵表',
            },
        ),
        migrations.CreateModel(
            name='Smoke',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insert_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='烟雾更新时间')),
                ('status', models.IntegerField(choices=[(1, '正常'), (2, '异常')], verbose_name='烟雾状态')),
                ('online', models.IntegerField(choices=[(1, '在线'), (2, '离线')], verbose_name='在线状态')),
            ],
            options={
                'verbose_name': '烟雾传感器',
            },
        ),
        migrations.CreateModel(
            name='Temperature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insert_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='温度更新时间')),
                ('value', models.FloatField(verbose_name='温度值')),
                ('status', models.IntegerField(choices=[(1, '正常'), (2, '异常')], verbose_name='传感器状态')),
                ('online', models.IntegerField(choices=[(1, '在线'), (2, '离线')], verbose_name='在线状态')),
            ],
            options={
                'verbose_name': '温度传感器',
            },
        ),
        migrations.CreateModel(
            name='Unlocking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insert_time', models.DateTimeField(verbose_name='开锁记录更新时间')),
                ('user_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='开锁用户')),
                ('status', models.IntegerField(choices=[(1, '正常'), (2, '异常')], verbose_name='开锁状态')),
                ('close', models.DateTimeField(verbose_name='关锁时间')),
            ],
            options={
                'verbose_name': '开锁记录表',
            },
        ),
    ]
